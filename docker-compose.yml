services:
    caddy:
        image: caddy:2-alpine
        restart: always
        ports:
            - "80:80"
            - "443:443"
            - "443:443/udp"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile:ro
            - caddy_data:/data
            - caddy_config:/config
            - .:/app:ro
        environment:
            - CADDY_HOST=srv889998.hstgr.cloud
        cap_add:
            - NET_ADMIN
        networks:
            - web
    app:
        image: laravel-app
        build:
            context: .
            dockerfile: Dockerfile
            target: base
        restart: always
        expose:
            - '80'
        volumes:
            - '.:/app'
            - './storage:/app/storage'
        environment:
            - APP_URL=https://srv889998.hstgr.cloud
            - ASSET_URL=https://srv889998.hstgr.cloud
            - VITE_APP_URL=https://srv889998.hstgr.cloud
        depends_on:
            - mysql
            - redis
        networks:
            - web
            - internal
    mysql:
        image: 'mysql/mysql-server:8.0'
        restart: always
        ports:
            - '3306:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'mysql:/var/lib/mysql'
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}']
            retries: 3
            timeout: 5s
        networks:
            - internal
    redis:
        image: 'redis:alpine'
        restart: always
        ports:
            - '6379:6379'
        volumes:
            - 'redis:/data'
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            retries: 3
            timeout: 5s
        networks:
            - internal
    artisan:
        volumes:
            - ".:/app"
        image: laravel-app
        depends_on:
            - mysql
            - redis
        entrypoint: 'frankenphp php-cli artisan'
        networks:
            - internal

networks:
    web:
        driver: bridge
    internal:
        driver: bridge

volumes:
    mysql:
        driver: local
    redis:
        driver: local
    caddy_data:
        driver: local
    caddy_config:
        driver: local