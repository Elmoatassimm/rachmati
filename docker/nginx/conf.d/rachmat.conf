# Upstream for FrankenPHP application
upstream app_backend {
    server app:80;
    keepalive 32;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/m;

# HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name rachmat.local *.rachmat.local;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name rachmat.local *.rachmat.local;
    
    # SSL certificates
    ssl_certificate /etc/ssl/certs/rachmat.local.crt;
    ssl_certificate_key /etc/ssl/private/rachmat.local.key;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Client settings
    client_max_body_size 50M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    
    # Rate limiting for sensitive endpoints
    location ~ ^/(api/login|api/register) {
        limit_req zone=login_limit burst=3 nodelay;
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
    }
    
    location ~ ^/api/ {
        limit_req zone=api_limit burst=20 nodelay;
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
        access_log off;
    }
    
    # Static assets caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg)$ {
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
        
        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Optional: serve from nginx if files exist locally
        # try_files $uri @proxy;
    }
    
    # Laravel mix assets (with versioning)
    location /build/ {
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # All other requests
    location / {
        proxy_pass http://app_backend;
        include /etc/nginx/proxy_params;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Security: deny access to sensitive files
    location ~ /\.(ht|git|env) {
        deny all;
        return 404;
    }
    
    location ~ /(storage|bootstrap|vendor|node_modules)/ {
        deny all;
        return 404;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
} 